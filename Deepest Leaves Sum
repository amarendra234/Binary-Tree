/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sum;
    int height(TreeNode* root){
        if(root==NULL){
            return 0;
        }
        return max(height(root->left),height(root->right))+1;
    }
    void print_k_level(TreeNode* root,int k){
        if(root==NULL){
            return;
        }
        if(k==1){
           sum+=root->val;
        }
         print_k_level(root->left,k-1);
         print_k_level(root->right,k-1);
    }
    int deepestLeavesSum(TreeNode* root) {
        int max_h=height(root);
        sum=0;
        print_k_level(root,max_h);
        return sum;
    }
};
